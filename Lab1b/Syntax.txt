identifier = letter{letter|digit}
letter = "A" | "B" | ... | "Z"
digit = "0" | "1" | ... | "9"
integer = ["+"|"-"]digit{digit}
boolean = "true" | "false"

program = [blank]{statement[blank]}
blank = (" " | "\t" | "\n") [blank]
statement = declaration_stmt | assignment_stmt | if_stmt | while_stmt | read_stmt | write_stmt | list_add_stmt
declaration_stmt = type blank identifier [blank] ";"
type = "int" | "bool" | "int_list"
assignment_stmt = identifier [blank] "<-" [blank] expression [blank] ";"
expression = constant | identifier | (expression compound_operator expression) | "(" expression  ")"
constant = integer | boolean
compound_operator = "<-" | "+" | "-" | "*" | "/" | "%" | "<" | "<=" | "=" | ">" | ">=" | "and" | "or" | ".get"
if_stmt = "if" [blank] "(" [blank] expression [blank] ")" [blank] compound_stmt
compound_stmt = "{" [blank] { statement [blank] } "}"
while_stmt = "while" [blank] "(" [blank] expression [blank] ")" [blank] compound_stmt
read_stmt = "read" blank identifier ";"
write_stmt = "write" blank identifier ";"
list_add_stmt = identifier blank ".add" blank expression [blank] ";"
